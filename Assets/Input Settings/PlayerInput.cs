//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input Settings/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Dodgeball"",
            ""id"": ""ace7a1d1-551f-48cb-8c73-098a4a96a993"",
            ""actions"": [
                {
                    ""name"": ""MovementPressed"",
                    ""type"": ""Value"",
                    ""id"": ""d626a57b-9f9d-4f1c-9b68-b8f31ee2564e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MovementReleased"",
                    ""type"": ""Value"",
                    ""id"": ""08bacba5-8fad-4f7d-b9cb-15f583f70f0a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SprintPressed"",
                    ""type"": ""Button"",
                    ""id"": ""0baabcdf-f27f-4ef0-9962-94d271603095"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SprintReleased"",
                    ""type"": ""Button"",
                    ""id"": ""01b754ae-8782-4efa-9f61-0302a833ea3f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throw"",
                    ""type"": ""Button"",
                    ""id"": ""38a5b1cc-d2c2-477c-a902-6d2328414eb1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""2ecfb408-7075-4072-9d6a-8ab0ffe8f5a1"",
                    ""path"": ""2DVector"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementPressed"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e07b4f9a-7ee6-4d45-849c-82728f36922a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f884a39c-237b-4c05-bd85-70abd5e4b5dc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2a992b44-3869-40e2-8076-4dfed2159c23"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e3601260-ea84-467f-840f-3fb266fe8eb2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""2b678f3e-8f59-43f0-bb6c-7ed56c74ef16"",
                    ""path"": ""2DVector"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementReleased"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""18b65af3-6d32-41a8-b0e8-32044dbbebf6"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementReleased"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d17c49f8-ed68-4b39-a638-6dda060df470"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementReleased"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""aa637441-e2f5-429d-b2de-6c91a73abff9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementReleased"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f13e11b7-0f54-454d-9145-2184a9683f5d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementReleased"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""169e21ef-665c-489c-9af7-acb0707827fb"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SprintPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""132e0953-765e-4cde-a666-9a1564b2afea"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SprintReleased"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a157bcb5-7f4b-4a5f-9321-7a538237b95a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Dodgeball
        m_Dodgeball = asset.FindActionMap("Dodgeball", throwIfNotFound: true);
        m_Dodgeball_MovementPressed = m_Dodgeball.FindAction("MovementPressed", throwIfNotFound: true);
        m_Dodgeball_MovementReleased = m_Dodgeball.FindAction("MovementReleased", throwIfNotFound: true);
        m_Dodgeball_SprintPressed = m_Dodgeball.FindAction("SprintPressed", throwIfNotFound: true);
        m_Dodgeball_SprintReleased = m_Dodgeball.FindAction("SprintReleased", throwIfNotFound: true);
        m_Dodgeball_Throw = m_Dodgeball.FindAction("Throw", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Dodgeball
    private readonly InputActionMap m_Dodgeball;
    private List<IDodgeballActions> m_DodgeballActionsCallbackInterfaces = new List<IDodgeballActions>();
    private readonly InputAction m_Dodgeball_MovementPressed;
    private readonly InputAction m_Dodgeball_MovementReleased;
    private readonly InputAction m_Dodgeball_SprintPressed;
    private readonly InputAction m_Dodgeball_SprintReleased;
    private readonly InputAction m_Dodgeball_Throw;
    public struct DodgeballActions
    {
        private @PlayerInput m_Wrapper;
        public DodgeballActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MovementPressed => m_Wrapper.m_Dodgeball_MovementPressed;
        public InputAction @MovementReleased => m_Wrapper.m_Dodgeball_MovementReleased;
        public InputAction @SprintPressed => m_Wrapper.m_Dodgeball_SprintPressed;
        public InputAction @SprintReleased => m_Wrapper.m_Dodgeball_SprintReleased;
        public InputAction @Throw => m_Wrapper.m_Dodgeball_Throw;
        public InputActionMap Get() { return m_Wrapper.m_Dodgeball; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DodgeballActions set) { return set.Get(); }
        public void AddCallbacks(IDodgeballActions instance)
        {
            if (instance == null || m_Wrapper.m_DodgeballActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DodgeballActionsCallbackInterfaces.Add(instance);
            @MovementPressed.started += instance.OnMovementPressed;
            @MovementPressed.performed += instance.OnMovementPressed;
            @MovementPressed.canceled += instance.OnMovementPressed;
            @MovementReleased.started += instance.OnMovementReleased;
            @MovementReleased.performed += instance.OnMovementReleased;
            @MovementReleased.canceled += instance.OnMovementReleased;
            @SprintPressed.started += instance.OnSprintPressed;
            @SprintPressed.performed += instance.OnSprintPressed;
            @SprintPressed.canceled += instance.OnSprintPressed;
            @SprintReleased.started += instance.OnSprintReleased;
            @SprintReleased.performed += instance.OnSprintReleased;
            @SprintReleased.canceled += instance.OnSprintReleased;
            @Throw.started += instance.OnThrow;
            @Throw.performed += instance.OnThrow;
            @Throw.canceled += instance.OnThrow;
        }

        private void UnregisterCallbacks(IDodgeballActions instance)
        {
            @MovementPressed.started -= instance.OnMovementPressed;
            @MovementPressed.performed -= instance.OnMovementPressed;
            @MovementPressed.canceled -= instance.OnMovementPressed;
            @MovementReleased.started -= instance.OnMovementReleased;
            @MovementReleased.performed -= instance.OnMovementReleased;
            @MovementReleased.canceled -= instance.OnMovementReleased;
            @SprintPressed.started -= instance.OnSprintPressed;
            @SprintPressed.performed -= instance.OnSprintPressed;
            @SprintPressed.canceled -= instance.OnSprintPressed;
            @SprintReleased.started -= instance.OnSprintReleased;
            @SprintReleased.performed -= instance.OnSprintReleased;
            @SprintReleased.canceled -= instance.OnSprintReleased;
            @Throw.started -= instance.OnThrow;
            @Throw.performed -= instance.OnThrow;
            @Throw.canceled -= instance.OnThrow;
        }

        public void RemoveCallbacks(IDodgeballActions instance)
        {
            if (m_Wrapper.m_DodgeballActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDodgeballActions instance)
        {
            foreach (var item in m_Wrapper.m_DodgeballActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DodgeballActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DodgeballActions @Dodgeball => new DodgeballActions(this);
    public interface IDodgeballActions
    {
        void OnMovementPressed(InputAction.CallbackContext context);
        void OnMovementReleased(InputAction.CallbackContext context);
        void OnSprintPressed(InputAction.CallbackContext context);
        void OnSprintReleased(InputAction.CallbackContext context);
        void OnThrow(InputAction.CallbackContext context);
    }
}
