//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input Settings/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Dodgeball"",
            ""id"": ""e4d956ea-ee01-4ae5-934d-dd67247662a7"",
            ""actions"": [
                {
                    ""name"": ""MovementPressed"",
                    ""type"": ""Value"",
                    ""id"": ""fcc41af7-b10f-4418-b1d8-40eda43446b1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MovementReleased"",
                    ""type"": ""Value"",
                    ""id"": ""335d692d-4823-41a9-8fd4-5fde2729d92a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SprintPressed"",
                    ""type"": ""Button"",
                    ""id"": ""badb5f78-7d57-4779-8bc8-a6db3d0d8349"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SprintReleased"",
                    ""type"": ""Button"",
                    ""id"": ""9322be34-31af-43e1-9218-e20245127b23"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""6da5794e-aaad-4ef0-91a6-462381fcec13"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementPressed"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1afb6385-3f77-42a1-9af7-261b5e76735c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5cd17b93-7222-4b7a-ade0-67714fa7dcd2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cc8ca444-5990-49c1-8457-e5e9bbfe7852"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""69f34bae-be68-41d0-9948-79789104c8d9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""ee3a5a88-dc6e-4461-82a6-a8d61ec1d2e5"",
                    ""path"": ""2DVector"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementReleased"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dea4712a-2998-4dd7-b2e3-a7b12e8b8f4c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementReleased"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1f8f8b51-ef79-4352-9bba-455a45ce811d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementReleased"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""dd535729-bdf2-4a08-a8b3-93b6ecbfc7f5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementReleased"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ce1e3781-bd9c-450c-a774-0db3c54284df"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovementReleased"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f63c68c6-f1b2-4cb8-bfe2-fd802fc4e56b"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SprintPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d76649d-6853-4eb0-8770-1043d99b975d"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SprintReleased"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Dodgeball
        m_Dodgeball = asset.FindActionMap("Dodgeball", throwIfNotFound: true);
        m_Dodgeball_MovementPressed = m_Dodgeball.FindAction("MovementPressed", throwIfNotFound: true);
        m_Dodgeball_MovementReleased = m_Dodgeball.FindAction("MovementReleased", throwIfNotFound: true);
        m_Dodgeball_SprintPressed = m_Dodgeball.FindAction("SprintPressed", throwIfNotFound: true);
        m_Dodgeball_SprintReleased = m_Dodgeball.FindAction("SprintReleased", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Dodgeball
    private readonly InputActionMap m_Dodgeball;
    private List<IDodgeballActions> m_DodgeballActionsCallbackInterfaces = new List<IDodgeballActions>();
    private readonly InputAction m_Dodgeball_MovementPressed;
    private readonly InputAction m_Dodgeball_MovementReleased;
    private readonly InputAction m_Dodgeball_SprintPressed;
    private readonly InputAction m_Dodgeball_SprintReleased;
    public struct DodgeballActions
    {
        private @PlayerInput m_Wrapper;
        public DodgeballActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MovementPressed => m_Wrapper.m_Dodgeball_MovementPressed;
        public InputAction @MovementReleased => m_Wrapper.m_Dodgeball_MovementReleased;
        public InputAction @SprintPressed => m_Wrapper.m_Dodgeball_SprintPressed;
        public InputAction @SprintReleased => m_Wrapper.m_Dodgeball_SprintReleased;
        public InputActionMap Get() { return m_Wrapper.m_Dodgeball; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DodgeballActions set) { return set.Get(); }
        public void AddCallbacks(IDodgeballActions instance)
        {
            if (instance == null || m_Wrapper.m_DodgeballActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DodgeballActionsCallbackInterfaces.Add(instance);
            @MovementPressed.started += instance.OnMovementPressed;
            @MovementPressed.performed += instance.OnMovementPressed;
            @MovementPressed.canceled += instance.OnMovementPressed;
            @MovementReleased.started += instance.OnMovementReleased;
            @MovementReleased.performed += instance.OnMovementReleased;
            @MovementReleased.canceled += instance.OnMovementReleased;
            @SprintPressed.started += instance.OnSprintPressed;
            @SprintPressed.performed += instance.OnSprintPressed;
            @SprintPressed.canceled += instance.OnSprintPressed;
            @SprintReleased.started += instance.OnSprintReleased;
            @SprintReleased.performed += instance.OnSprintReleased;
            @SprintReleased.canceled += instance.OnSprintReleased;
        }

        private void UnregisterCallbacks(IDodgeballActions instance)
        {
            @MovementPressed.started -= instance.OnMovementPressed;
            @MovementPressed.performed -= instance.OnMovementPressed;
            @MovementPressed.canceled -= instance.OnMovementPressed;
            @MovementReleased.started -= instance.OnMovementReleased;
            @MovementReleased.performed -= instance.OnMovementReleased;
            @MovementReleased.canceled -= instance.OnMovementReleased;
            @SprintPressed.started -= instance.OnSprintPressed;
            @SprintPressed.performed -= instance.OnSprintPressed;
            @SprintPressed.canceled -= instance.OnSprintPressed;
            @SprintReleased.started -= instance.OnSprintReleased;
            @SprintReleased.performed -= instance.OnSprintReleased;
            @SprintReleased.canceled -= instance.OnSprintReleased;
        }

        public void RemoveCallbacks(IDodgeballActions instance)
        {
            if (m_Wrapper.m_DodgeballActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDodgeballActions instance)
        {
            foreach (var item in m_Wrapper.m_DodgeballActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DodgeballActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DodgeballActions @Dodgeball => new DodgeballActions(this);
    public interface IDodgeballActions
    {
        void OnMovementPressed(InputAction.CallbackContext context);
        void OnMovementReleased(InputAction.CallbackContext context);
        void OnSprintPressed(InputAction.CallbackContext context);
        void OnSprintReleased(InputAction.CallbackContext context);
    }
}
